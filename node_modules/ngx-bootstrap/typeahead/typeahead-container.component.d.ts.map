{"version":3,"file":"typeahead-container.component.d.ts","sources":["typeahead-container.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, OnDestroy, Renderer2, TemplateRef, EventEmitter } from '@angular/core';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { Subscription } from 'rxjs';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { TypeaheadOptionItemContext, TypeaheadOptionListContext, TypeaheadTemplateMethods } from './models';\nexport declare class TypeaheadContainerComponent implements OnDestroy {\n    private positionService;\n    private renderer;\n    element: ElementRef;\n    private changeDetectorRef;\n    activeChangeEvent: EventEmitter<any>;\n    parent: TypeaheadDirective;\n    query: string[] | string;\n    isFocused: boolean;\n    top: string;\n    left: string;\n    display: string;\n    placement: string;\n    dropup: boolean;\n    guiHeight: string;\n    needScrollbar: boolean;\n    animationState: string;\n    positionServiceSubscription: Subscription;\n    height: number;\n    popupId: string;\n    readonly isBs4: boolean;\n    readonly typeaheadTemplateMethods: TypeaheadTemplateMethods;\n    protected _active: TypeaheadMatch;\n    protected _matches: TypeaheadMatch[];\n    private ulElement;\n    private liElements;\n    constructor(positionService: PositioningService, renderer: Renderer2, element: ElementRef, changeDetectorRef: ChangeDetectorRef);\n    active: TypeaheadMatch;\n    matches: TypeaheadMatch[];\n    readonly isTopPosition: boolean;\n    readonly optionsListTemplate: TemplateRef<TypeaheadOptionListContext>;\n    readonly isAnimated: boolean;\n    readonly adaptivePosition: boolean;\n    readonly typeaheadScrollable: boolean;\n    readonly typeaheadOptionsInScrollableView: number;\n    readonly typeaheadIsFirstItemActive: boolean;\n    readonly itemTemplate: TemplateRef<TypeaheadOptionItemContext>;\n    selectActiveMatch(isActiveItemChanged?: boolean): void;\n    activeChanged(): void;\n    prevActiveMatch(): void;\n    nextActiveMatch(): void;\n    selectActive(value: TypeaheadMatch): void;\n    highlight(match: TypeaheadMatch, query: string[] | string): string;\n    focusLost(): void;\n    isActive(value: TypeaheadMatch): boolean;\n    selectMatch(value: TypeaheadMatch, e?: Event): boolean;\n    setScrollableMode(): void;\n    scrollPrevious(index: number): void;\n    scrollNext(index: number): void;\n    ngOnDestroy(): void;\n    private isScrolledIntoView;\n    private scrollToBottom;\n    private scrollToTop;\n}\n"]}