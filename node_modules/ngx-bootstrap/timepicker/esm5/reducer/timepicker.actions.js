/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var TimepickerActions = /** @class */ (function () {
    function TimepickerActions() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    TimepickerActions.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return {
            type: TimepickerActions.WRITE_VALUE,
            payload: value
        };
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TimepickerActions.prototype.changeHours = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        return {
            type: TimepickerActions.CHANGE_HOURS,
            payload: event
        };
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TimepickerActions.prototype.changeMinutes = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        return {
            type: TimepickerActions.CHANGE_MINUTES,
            payload: event
        };
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TimepickerActions.prototype.changeSeconds = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        return {
            type: TimepickerActions.CHANGE_SECONDS,
            payload: event
        };
    };
    /**
     * @param {?} value
     * @return {?}
     */
    TimepickerActions.prototype.setTime = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return {
            type: TimepickerActions.SET_TIME_UNIT,
            payload: value
        };
    };
    /**
     * @param {?} value
     * @return {?}
     */
    TimepickerActions.prototype.updateControls = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return {
            type: TimepickerActions.UPDATE_CONTROLS,
            payload: value
        };
    };
    TimepickerActions.WRITE_VALUE = '[timepicker] write value from ng model';
    TimepickerActions.CHANGE_HOURS = '[timepicker] change hours';
    TimepickerActions.CHANGE_MINUTES = '[timepicker] change minutes';
    TimepickerActions.CHANGE_SECONDS = '[timepicker] change seconds';
    TimepickerActions.SET_TIME_UNIT = '[timepicker] set time unit';
    TimepickerActions.UPDATE_CONTROLS = '[timepicker] update controls';
TimepickerActions.ɵfac = function TimepickerActions_Factory(t) { return new (t || TimepickerActions)(); };
TimepickerActions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TimepickerActions, factory: function (t) { return TimepickerActions.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TimepickerActions, [{
        type: Injectable
    }], function () { return []; }, null); })();
    return TimepickerActions;
}());
export { TimepickerActions };
if (false) {
    /** @type {?} */
    TimepickerActions.WRITE_VALUE;
    /** @type {?} */
    TimepickerActions.CHANGE_HOURS;
    /** @type {?} */
    TimepickerActions.CHANGE_MINUTES;
    /** @type {?} */
    TimepickerActions.CHANGE_SECONDS;
    /** @type {?} */
    TimepickerActions.SET_TIME_UNIT;
    /** @type {?} */
    TimepickerActions.UPDATE_CONTROLS;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXBpY2tlci5hY3Rpb25zLmpzIiwic291cmNlcyI6WyJuZzovbmd4LWJvb3RzdHJhcC90aW1lcGlja2VyL3JlZHVjZXIvdGltZXBpY2tlci5hY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQVEzQztBQUVNLElBRk47QUFDaUIsSUFpRGpCLENBQUM7QUFDRDtBQUFRO0FBQXdCO0FBQW1CO0FBQVEsSUExQ3pELHNDQUFVO0FBQU87QUFDYjtBQUNNO0FBQVEsSUFGbEIsVUFBVyxLQUFvQjtBQUNqQyxRQUFJLE9BQU87QUFDWCxZQUFNLElBQUksRUFBRSxpQkFBaUIsQ0FBQyxXQUFXO0FBQ3pDLFlBQU0sT0FBTyxFQUFFLEtBQUs7QUFDcEIsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBRUg7QUFBUTtBQUF3QjtBQUNyQjtBQUNMLElBRkosdUNBQVc7QUFBTztBQUNoQjtBQUNNO0FBQVEsSUFGaEIsVUFBWSxLQUFzQjtBQUNwQyxRQUFJLE9BQU87QUFDWCxZQUFNLElBQUksRUFBRSxpQkFBaUIsQ0FBQyxZQUFZO0FBQzFDLFlBQU0sT0FBTyxFQUFFLEtBQUs7QUFDcEIsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBRUg7QUFBUTtBQUF3QjtBQUN2QjtBQUNMLElBRkYseUNBQWE7QUFBTztBQUNsQjtBQUNNO0FBQVEsSUFGaEIsVUFBYyxLQUFzQjtBQUN0QyxRQUFJLE9BQU87QUFDWCxZQUFNLElBQUksRUFBRSxpQkFBaUIsQ0FBQyxjQUFjO0FBQzVDLFlBQU0sT0FBTyxFQUFFLEtBQUs7QUFDcEIsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBRUg7QUFBUTtBQUF3QjtBQUMvQjtBQUFRLElBRFAseUNBQWE7QUFBTztBQUF3QjtBQUU1QztBQUFRLElBRlIsVUFBYyxLQUFzQjtBQUFJLFFBQ3RDLE9BQU87QUFDWCxZQUFNLElBQUksRUFBRSxpQkFBaUIsQ0FBQyxjQUFjO0FBQzVDLFlBQU0sT0FBTyxFQUFFLEtBQUs7QUFDcEIsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBRUg7QUFBUTtBQUF3QjtBQUUzQjtBQUFRLElBRlgsbUNBQU87QUFBTztBQUNUO0FBQ007QUFBUSxJQUZuQixVQUFRLEtBQVc7QUFBSSxRQUNyQixPQUFPO0FBQ1gsWUFBTSxJQUFJLEVBQUUsaUJBQWlCLENBQUMsYUFBYTtBQUMzQyxZQUFNLE9BQU8sRUFBRSxLQUFLO0FBQ3BCLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUVIO0FBQVE7QUFBd0I7QUFBbUI7QUFBUSxJQUF6RCwwQ0FBYztBQUFPO0FBQXdCO0FBQ3pDO0FBQ0wsSUFGQyxVQUFlLEtBQStCO0FBQUksUUFDaEQsT0FBTztBQUNYLFlBQU0sSUFBSSxFQUFFLGlCQUFpQixDQUFDLGVBQWU7QUFDN0MsWUFBTSxPQUFPLEVBQUUsS0FBSztBQUNwQixTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7QUFDRixJQWhEaUIsNkJBQVcsR0FBRyx3Q0FBd0MsQ0FBQztBQUN6RSxJQUFrQiw4QkFBWSxHQUFHLDJCQUEyQixDQUFDO0FBQzdELElBQWtCLGdDQUFjLEdBQUcsNkJBQTZCLENBQUM7QUFDakUsSUFBa0IsZ0NBQWMsR0FBRyw2QkFBNkIsQ0FBQztBQUNqRSxJQUFrQiwrQkFBYSxHQUFHLDRCQUE0QixDQUFDO0FBQy9ELElBQWtCLGlDQUFlLEdBQUcsOEJBQThCLENBQUM7cURBUGxFLFVBQVU7Ozs7Z0RBQ0w7QUFBQyxJQWlEUCx3QkFBQztBQUNBLENBREEsQUFsREQsSUFrREM7QUFDRCxTQWxEYSxpQkFBaUI7QUFDN0I7QUFBYTtBQUFxQixJQUFqQyw4QkFBdUU7QUFDekU7QUFBcUIsSUFBbkIsK0JBQTJEO0FBQzdEO0FBQXFCLElBQW5CLGlDQUErRDtBQUNqRTtBQUFxQixJQUFuQixpQ0FBK0Q7QUFDakU7QUFBcUIsSUFBbkIsZ0NBQTZEO0FBQy9EO0FBQXFCLElBQW5CLGtDQUFpRTtBQUNuRTtBQUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9taW5pLW5ncngnO1xuaW1wb3J0IHtcbiAgVGltZUNoYW5nZUV2ZW50LFxuICBUaW1lcGlja2VyQ29tcG9uZW50U3RhdGUsXG4gIFRpbWVcbn0gZnJvbSAnLi4vdGltZXBpY2tlci5tb2RlbHMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVGltZXBpY2tlckFjdGlvbnMge1xuICBzdGF0aWMgcmVhZG9ubHkgV1JJVEVfVkFMVUUgPSAnW3RpbWVwaWNrZXJdIHdyaXRlIHZhbHVlIGZyb20gbmcgbW9kZWwnO1xuICBzdGF0aWMgcmVhZG9ubHkgQ0hBTkdFX0hPVVJTID0gJ1t0aW1lcGlja2VyXSBjaGFuZ2UgaG91cnMnO1xuICBzdGF0aWMgcmVhZG9ubHkgQ0hBTkdFX01JTlVURVMgPSAnW3RpbWVwaWNrZXJdIGNoYW5nZSBtaW51dGVzJztcbiAgc3RhdGljIHJlYWRvbmx5IENIQU5HRV9TRUNPTkRTID0gJ1t0aW1lcGlja2VyXSBjaGFuZ2Ugc2Vjb25kcyc7XG4gIHN0YXRpYyByZWFkb25seSBTRVRfVElNRV9VTklUID0gJ1t0aW1lcGlja2VyXSBzZXQgdGltZSB1bml0JztcbiAgc3RhdGljIHJlYWRvbmx5IFVQREFURV9DT05UUk9MUyA9ICdbdGltZXBpY2tlcl0gdXBkYXRlIGNvbnRyb2xzJztcblxuICB3cml0ZVZhbHVlKHZhbHVlOiBEYXRlIHwgc3RyaW5nKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFRpbWVwaWNrZXJBY3Rpb25zLldSSVRFX1ZBTFVFLFxuICAgICAgcGF5bG9hZDogdmFsdWVcbiAgICB9O1xuICB9XG5cbiAgY2hhbmdlSG91cnMoZXZlbnQ6IFRpbWVDaGFuZ2VFdmVudCkge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBUaW1lcGlja2VyQWN0aW9ucy5DSEFOR0VfSE9VUlMsXG4gICAgICBwYXlsb2FkOiBldmVudFxuICAgIH07XG4gIH1cblxuICBjaGFuZ2VNaW51dGVzKGV2ZW50OiBUaW1lQ2hhbmdlRXZlbnQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogVGltZXBpY2tlckFjdGlvbnMuQ0hBTkdFX01JTlVURVMsXG4gICAgICBwYXlsb2FkOiBldmVudFxuICAgIH07XG4gIH1cblxuICBjaGFuZ2VTZWNvbmRzKGV2ZW50OiBUaW1lQ2hhbmdlRXZlbnQpOiBBY3Rpb24ge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBUaW1lcGlja2VyQWN0aW9ucy5DSEFOR0VfU0VDT05EUyxcbiAgICAgIHBheWxvYWQ6IGV2ZW50XG4gICAgfTtcbiAgfVxuXG4gIHNldFRpbWUodmFsdWU6IFRpbWUpOiBBY3Rpb24ge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBUaW1lcGlja2VyQWN0aW9ucy5TRVRfVElNRV9VTklULFxuICAgICAgcGF5bG9hZDogdmFsdWVcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlQ29udHJvbHModmFsdWU6IFRpbWVwaWNrZXJDb21wb25lbnRTdGF0ZSk6IEFjdGlvbiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFRpbWVwaWNrZXJBY3Rpb25zLlVQREFURV9DT05UUk9MUyxcbiAgICAgIHBheWxvYWQ6IHZhbHVlXG4gICAgfTtcbiAgfVxufVxuIl19