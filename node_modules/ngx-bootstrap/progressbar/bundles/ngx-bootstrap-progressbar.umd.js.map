{"version":3,"file":"ngx-bootstrap-progressbar.umd.js","sources":["ng:/ngx-bootstrap/progressbar/progressbar.config.ts","ng:/ngx-bootstrap/progressbar/progressbar.component.ts","ng:/ngx-bootstrap/progressbar/bar.component.ts","ng:/ngx-bootstrap/progressbar/progressbar.module.ts"],"names":["Injectable","isBs3","Component","Input","HostBinding","ElementRef","Host","Renderer2","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ProgressbarConfig {\n  /** if `true` changing value of progress bar will be animated */\n  animate: Boolean = false;\n  /** maximum total value of progress element */\n  max = 100;\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { ProgressbarConfig } from './progressbar.config';\nimport { ProgressbarType } from './progressbar-type.interface';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { BarComponent } from './bar.component';\n\n@Component({\n  selector: 'progressbar',\n  templateUrl: './progressbar.component.html',\n  styles: [\n    `\n    :host {\n      width: 100%;\n      display: flex;\n    }\n  `\n  ]\n})\nexport class ProgressbarComponent {\n  /** if `true` changing value of progress bar will be animated */\n  @Input()\n  set animate(value: boolean) {\n    this._animate = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.animate = value;\n    });\n  }\n  /** If `true`, striped classes are applied */\n  @Input()\n  set striped(value: boolean) {\n    this._striped = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.striped = value;\n    });\n  }\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type: ProgressbarType;\n  /** current value of progress bar. Could be a number or array of objects\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n   */\n  @Input()\n  /* tslint:disable-next-line:no-any */\n  set value(value: number | any[]) {\n    this.isStacked = Array.isArray(value);\n    this._value = value;\n  }\n  isStacked = false;\n  _striped: boolean;\n  _animate: boolean;\n  /* tslint:disable-next-line:no-any */\n  _value: number | any[];\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  /** maximum total value of progress element */\n  @HostBinding('attr.max')\n  @Input()\n  get max(): number {\n    return this._max;\n  }\n\n  set max(v: number) {\n    this._max = v;\n    this.bars.forEach((bar: BarComponent) => {\n      bar.recalculatePercentage();\n    });\n  }\n\n  @HostBinding('class.progress') addClass = true;\n\n  /* tslint:disable-next-line:no-any */\n  bars: BarComponent[] = [];\n\n  protected _max = 100;\n\n  constructor(config: ProgressbarConfig) {\n    Object.assign(this, config);\n  }\n  addBar(bar: BarComponent): void {\n    bar.animate = this._animate;\n    bar.striped = this._striped;\n\n    this.bars.push(bar);\n  }\n\n  removeBar(bar: BarComponent): void {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n  }\n}\n","import {\n  Component,\n  Host,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\n\nimport { ProgressbarComponent } from './progressbar.component';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n// todo: number pipe\n// todo: use query from progress?\n@Component({\n  selector: 'bar',\n  templateUrl: './bar.component.html',\n  host: {\n    role: 'progressbar',\n    'aria-valuemin': '0',\n    '[class.progress-bar-animated]': '!isBs3 && animate',\n    '[class.progress-bar-striped]': 'striped',\n    '[class.active]': 'isBs3 && animate',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n    '[attr.aria-valuemax]': 'max',\n    '[style.height.%]': '\"100\"'\n  }\n})\nexport class BarComponent implements OnInit, OnDestroy {\n  max: number;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input()\n  get type(): string {\n    return this._type;\n  }\n\n  set type(v: string) {\n    this._type = v;\n    this.applyTypeClasses();\n  }\n\n  /** current value of progress bar */\n  @Input()\n  get value(): number {\n    return this._value;\n  }\n\n  set value(v: number) {\n    if (!v && v !== 0) {\n      return;\n    }\n    this._value = v;\n    this.recalculatePercentage();\n  }\n\n  @HostBinding('style.width.%')\n  get setBarWidth() {\n    this.recalculatePercentage();\n\n    return this.percent;\n  }\n\n  @HostBinding('class.progress-bar') addClass = true;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  striped: boolean;\n  animate: boolean;\n  percent = 0;\n  progress: ProgressbarComponent;\n\n  protected _value: number;\n  protected _type: string;\n  private _prevType: string;\n\n  constructor(\n    private el: ElementRef,\n    @Host() progress: ProgressbarComponent,\n    private renderer: Renderer2\n  ) {\n    this.progress = progress;\n  }\n\n  ngOnInit(): void {\n    this.progress.addBar(this);\n  }\n\n  ngOnDestroy(): void {\n    this.progress.removeBar(this);\n  }\n\n  recalculatePercentage(): void {\n    this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n\n    const totalPercentage = this.progress.bars\n      .reduce(function (total: number, bar: BarComponent): number {\n        return total + bar.percent;\n      }, 0);\n\n    if (totalPercentage > 100) {\n      this.percent -= totalPercentage - 100;\n    }\n  }\n\n  private applyTypeClasses(): void {\n    if (this._prevType) {\n      const barTypeClass = `progress-bar-${this._prevType}`;\n      const bgClass = `bg-${this._prevType}`;\n      this.renderer.removeClass(this.el.nativeElement, barTypeClass);\n      this.renderer.removeClass(this.el.nativeElement, bgClass);\n      this._prevType = null;\n    }\n\n    if (this._type) {\n      const barTypeClass = `progress-bar-${this._type}`;\n      const bgClass = `bg-${this._type}`;\n      this.renderer.addClass(this.el.nativeElement, barTypeClass);\n      this.renderer.addClass(this.el.nativeElement, bgClass);\n      this._prevType = this._type;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { ProgressbarConfig } from './progressbar.config';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BarComponent, ProgressbarComponent],\n  exports: [BarComponent, ProgressbarComponent]\n})\nexport class ProgressbarModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: ProgressbarModule, providers: [ProgressbarConfig] };\n  }\n}\n"]}