{"version":3,"file":"ngx-bootstrap-progressbar.js","sources":["ng:/ngx-bootstrap/progressbar/progressbar.config.ts","ng:/ngx-bootstrap/progressbar/progressbar.component.ts","ng:/ngx-bootstrap/progressbar/bar.component.ts","ng:/ngx-bootstrap/progressbar/progressbar.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ProgressbarConfig {\n  /** if `true` changing value of progress bar will be animated */\n  animate: Boolean = false;\n  /** maximum total value of progress element */\n  max = 100;\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { ProgressbarConfig } from './progressbar.config';\nimport { ProgressbarType } from './progressbar-type.interface';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { BarComponent } from './bar.component';\n\n@Component({\n  selector: 'progressbar',\n  templateUrl: './progressbar.component.html',\n  styles: [\n    `\n    :host {\n      width: 100%;\n      display: flex;\n    }\n  `\n  ]\n})\nexport class ProgressbarComponent {\n  /** if `true` changing value of progress bar will be animated */\n  @Input()\n  set animate(value: boolean) {\n    this._animate = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.animate = value;\n    });\n  }\n  /** If `true`, striped classes are applied */\n  @Input()\n  set striped(value: boolean) {\n    this._striped = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.striped = value;\n    });\n  }\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type: ProgressbarType;\n  /** current value of progress bar. Could be a number or array of objects\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n   */\n  @Input()\n  /* tslint:disable-next-line:no-any */\n  set value(value: number | any[]) {\n    this.isStacked = Array.isArray(value);\n    this._value = value;\n  }\n  isStacked = false;\n  _striped: boolean;\n  _animate: boolean;\n  /* tslint:disable-next-line:no-any */\n  _value: number | any[];\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  /** maximum total value of progress element */\n  @HostBinding('attr.max')\n  @Input()\n  get max(): number {\n    return this._max;\n  }\n\n  set max(v: number) {\n    this._max = v;\n    this.bars.forEach((bar: BarComponent) => {\n      bar.recalculatePercentage();\n    });\n  }\n\n  @HostBinding('class.progress') addClass = true;\n\n  /* tslint:disable-next-line:no-any */\n  bars: BarComponent[] = [];\n\n  protected _max = 100;\n\n  constructor(config: ProgressbarConfig) {\n    Object.assign(this, config);\n  }\n  addBar(bar: BarComponent): void {\n    bar.animate = this._animate;\n    bar.striped = this._striped;\n\n    this.bars.push(bar);\n  }\n\n  removeBar(bar: BarComponent): void {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n  }\n}\n","import {\n  Component,\n  Host,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\n\nimport { ProgressbarComponent } from './progressbar.component';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n// todo: number pipe\n// todo: use query from progress?\n@Component({\n  selector: 'bar',\n  templateUrl: './bar.component.html',\n  host: {\n    role: 'progressbar',\n    'aria-valuemin': '0',\n    '[class.progress-bar-animated]': '!isBs3 && animate',\n    '[class.progress-bar-striped]': 'striped',\n    '[class.active]': 'isBs3 && animate',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n    '[attr.aria-valuemax]': 'max',\n    '[style.height.%]': '\"100\"'\n  }\n})\nexport class BarComponent implements OnInit, OnDestroy {\n  max: number;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input()\n  get type(): string {\n    return this._type;\n  }\n\n  set type(v: string) {\n    this._type = v;\n    this.applyTypeClasses();\n  }\n\n  /** current value of progress bar */\n  @Input()\n  get value(): number {\n    return this._value;\n  }\n\n  set value(v: number) {\n    if (!v && v !== 0) {\n      return;\n    }\n    this._value = v;\n    this.recalculatePercentage();\n  }\n\n  @HostBinding('style.width.%')\n  get setBarWidth() {\n    this.recalculatePercentage();\n\n    return this.percent;\n  }\n\n  @HostBinding('class.progress-bar') addClass = true;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  striped: boolean;\n  animate: boolean;\n  percent = 0;\n  progress: ProgressbarComponent;\n\n  protected _value: number;\n  protected _type: string;\n  private _prevType: string;\n\n  constructor(\n    private el: ElementRef,\n    @Host() progress: ProgressbarComponent,\n    private renderer: Renderer2\n  ) {\n    this.progress = progress;\n  }\n\n  ngOnInit(): void {\n    this.progress.addBar(this);\n  }\n\n  ngOnDestroy(): void {\n    this.progress.removeBar(this);\n  }\n\n  recalculatePercentage(): void {\n    this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n\n    const totalPercentage = this.progress.bars\n      .reduce(function (total: number, bar: BarComponent): number {\n        return total + bar.percent;\n      }, 0);\n\n    if (totalPercentage > 100) {\n      this.percent -= totalPercentage - 100;\n    }\n  }\n\n  private applyTypeClasses(): void {\n    if (this._prevType) {\n      const barTypeClass = `progress-bar-${this._prevType}`;\n      const bgClass = `bg-${this._prevType}`;\n      this.renderer.removeClass(this.el.nativeElement, barTypeClass);\n      this.renderer.removeClass(this.el.nativeElement, bgClass);\n      this._prevType = null;\n    }\n\n    if (this._type) {\n      const barTypeClass = `progress-bar-${this._type}`;\n      const bgClass = `bg-${this._type}`;\n      this.renderer.addClass(this.el.nativeElement, barTypeClass);\n      this.renderer.addClass(this.el.nativeElement, bgClass);\n      this._prevType = this._type;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { ProgressbarConfig } from './progressbar.config';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BarComponent, ProgressbarComponent],\n  exports: [BarComponent, ProgressbarComponent]\n})\nexport class ProgressbarModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: ProgressbarModule, providers: [ProgressbarConfig] };\n  }\n}\n"]}