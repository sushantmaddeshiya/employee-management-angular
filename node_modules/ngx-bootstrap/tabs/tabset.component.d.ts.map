{"version":3,"file":"tabset.component.d.ts","sources":["tabset.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, Renderer2, ElementRef } from '@angular/core';\nimport { TabDirective } from './tab.directive';\nimport { TabsetConfig } from './tabset.config';\nexport declare class TabsetComponent implements OnDestroy {\n    private renderer;\n    private elementRef;\n    /** if true tabs will be placed vertically */\n    vertical: boolean;\n    /** if true tabs fill the container and have a consistent width */\n    justified: boolean;\n    /** navigation context class: 'tabs' or 'pills' */\n    type: string;\n    clazz: boolean;\n    tabs: TabDirective[];\n    classMap: {\n        [key: string]: boolean;\n    };\n    /** aria label for tab list */\n    ariaLabel: string;\n    protected isDestroyed: boolean;\n    protected _vertical: boolean;\n    protected _justified: boolean;\n    protected _type: string;\n    constructor(config: TabsetConfig, renderer: Renderer2, elementRef: ElementRef);\n    ngOnDestroy(): void;\n    addTab(tab: TabDirective): void;\n    removeTab(tab: TabDirective, options?: {\n        reselect: boolean;\n        emit: boolean;\n    }): void;\n    keyNavActions(event: KeyboardEvent, index: number): void;\n    protected getClosestTabIndex(index: number): number;\n    protected hasAvailableTabs(index: number): boolean;\n    protected setClassMap(): void;\n}\n"]}