/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// todo: split
import { Injectable } from '@angular/core';
/**
 * Provides default values for Pagination and pager components
 */
import * as ɵngcc0 from '@angular/core';
export class PaginationConfig {
    constructor() {
        this.main = {
            maxSize: void 0,
            itemsPerPage: 10,
            boundaryLinks: false,
            directionLinks: true,
            firstText: 'First',
            previousText: 'Previous',
            nextText: 'Next',
            lastText: 'Last',
            pageBtnClass: '',
            rotate: true
        };
        this.pager = {
            itemsPerPage: 15,
            previousText: '« Previous',
            nextText: 'Next »',
            pageBtnClass: '',
            align: true
        };
    }
}
PaginationConfig.ɵfac = function PaginationConfig_Factory(t) { return new (t || PaginationConfig)(); };
PaginationConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: PaginationConfig, factory: PaginationConfig.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PaginationConfig, [{
        type: Injectable
    }], function () { return []; }, null); })();
if (false) {
    /** @type {?} */
    PaginationConfig.prototype.main;
    /** @type {?} */
    PaginationConfig.prototype.pager;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi5jb25maWcuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtYm9vdHN0cmFwL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDO0FBQ0c7QUFFVTs7QUFFYixNQUFNLE9BQU8sZ0JBQWdCO0FBQzdCLElBRkE7QUFDRSxRQUNBLFNBQUksR0FBZ0I7QUFDdEIsWUFBSSxPQUFPLEVBQUUsS0FBSyxDQUFDO0FBQ25CLFlBQUksWUFBWSxFQUFFLEVBQUU7QUFDcEIsWUFBSSxhQUFhLEVBQUUsS0FBSztBQUN4QixZQUFJLGNBQWMsRUFBRSxJQUFJO0FBQ3hCLFlBQUksU0FBUyxFQUFFLE9BQU87QUFDdEIsWUFBSSxZQUFZLEVBQUUsVUFBVTtBQUM1QixZQUFJLFFBQVEsRUFBRSxNQUFNO0FBQ3BCLFlBQUksUUFBUSxFQUFFLE1BQU07QUFDcEIsWUFBSSxZQUFZLEVBQUUsRUFBRTtBQUNwQixZQUFJLE1BQU0sRUFBRSxJQUFJO0FBQ2hCLFNBQUcsQ0FBQztBQUNKLFFBQUUsVUFBSyxHQUFlO0FBQ3RCLFlBQUksWUFBWSxFQUFFLEVBQUU7QUFDcEIsWUFBSSxZQUFZLEVBQUUsWUFBWTtBQUM5QixZQUFJLFFBQVEsRUFBRSxRQUFRO0FBQ3RCLFlBQUksWUFBWSxFQUFFLEVBQUU7QUFDcEIsWUFBSSxLQUFLLEVBQUUsSUFBSTtBQUNmLFNBQUcsQ0FBQztBQUNKLElBQUEsQ0FBQztBQUNEOzRDQXRCQyxVQUFVOzs7O2dEQUNUO0FBQUM7QUFBYTtBQUNYLElBQUgsZ0NBV0U7QUFDSjtBQUFxQixJQUFuQixpQ0FNRTtBQUNKO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0b2RvOiBzcGxpdFxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDb25maWdNb2RlbCwgUGFnZXJNb2RlbCB9IGZyb20gJy4vbW9kZWxzJztcblxuLyoqIFByb3ZpZGVzIGRlZmF1bHQgdmFsdWVzIGZvciBQYWdpbmF0aW9uIGFuZCBwYWdlciBjb21wb25lbnRzICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUGFnaW5hdGlvbkNvbmZpZyB7XG4gIG1haW46IENvbmZpZ01vZGVsID0ge1xuICAgIG1heFNpemU6IHZvaWQgMCxcbiAgICBpdGVtc1BlclBhZ2U6IDEwLFxuICAgIGJvdW5kYXJ5TGlua3M6IGZhbHNlLFxuICAgIGRpcmVjdGlvbkxpbmtzOiB0cnVlLFxuICAgIGZpcnN0VGV4dDogJ0ZpcnN0JyxcbiAgICBwcmV2aW91c1RleHQ6ICdQcmV2aW91cycsXG4gICAgbmV4dFRleHQ6ICdOZXh0JyxcbiAgICBsYXN0VGV4dDogJ0xhc3QnLFxuICAgIHBhZ2VCdG5DbGFzczogJycsXG4gICAgcm90YXRlOiB0cnVlXG4gIH07XG4gIHBhZ2VyOiBQYWdlck1vZGVsID0ge1xuICAgIGl0ZW1zUGVyUGFnZTogMTUsXG4gICAgcHJldmlvdXNUZXh0OiAnwqsgUHJldmlvdXMnLFxuICAgIG5leHRUZXh0OiAnTmV4dCDCuycsXG4gICAgcGFnZUJ0bkNsYXNzOiAnJyxcbiAgICBhbGlnbjogdHJ1ZVxuICB9O1xufVxuIl19