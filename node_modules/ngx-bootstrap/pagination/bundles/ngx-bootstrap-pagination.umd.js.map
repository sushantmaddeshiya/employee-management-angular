{"version":3,"file":"ngx-bootstrap-pagination.umd.js","sources":["ng:/ngx-bootstrap/pagination/pagination.config.ts","ng:/ngx-bootstrap/pagination/pager.component.ts","ng:/ngx-bootstrap/pagination/pagination.component.ts","ng:/ngx-bootstrap/pagination/pagination.module.ts"],"names":["Injectable","NG_VALUE_ACCESSOR","forwardRef","EventEmitter","Component","ElementRef","ChangeDetectorRef","Input","Output","NgModule","CommonModule"],"mappings":"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","sourcesContent":["// todo: split\nimport { Injectable } from '@angular/core';\n\nimport { ConfigModel, PagerModel } from './models';\n\n/** Provides default values for Pagination and pager components */\n@Injectable()\nexport class PaginationConfig {\n  main: ConfigModel = {\n    maxSize: void 0,\n    itemsPerPage: 10,\n    boundaryLinks: false,\n    directionLinks: true,\n    firstText: 'First',\n    previousText: 'Previous',\n    nextText: 'Next',\n    lastText: 'Last',\n    pageBtnClass: '',\n    rotate: true\n  };\n  pager: PagerModel = {\n    itemsPerPage: 15,\n    previousText: 'Â« Previous',\n    nextText: 'Next Â»',\n    pageBtnClass: '',\n    align: true\n  };\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  Provider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PageChangedEvent } from './pagination.component';\nimport { PaginationConfig } from './pagination.config';\n\nimport { ConfigModel, PagesModel } from './models';\n\nexport const PAGER_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => PagerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'pager',\n  templateUrl: './pager.component.html',\n  providers: [PAGER_CONTROL_VALUE_ACCESSOR]\n})\nexport class PagerComponent implements ControlValueAccessor, OnInit {\n  config: ConfigModel;\n  /** if `true` aligns each link to the sides of pager */\n  @Input() align: boolean;\n  /** limit number for page links in pager */\n  @Input() maxSize: number;\n  /** if false first and last buttons will be hidden */\n  @Input() boundaryLinks: boolean;\n  /** if false previous and next buttons will be hidden */\n  @Input() directionLinks: boolean;\n  // labels\n  /** first button text */\n  @Input() firstText: string;\n  /** previous button text */\n  @Input() previousText: string;\n  /** next button text */\n  @Input() nextText: string;\n  /** last button text */\n  @Input() lastText: string;\n  /** if true current page will in the middle of pages list */\n  @Input() rotate: boolean;\n  // css\n  /** add class to <code><li\\></code> */\n  @Input() pageBtnClass: string;\n\n  /** if true pagination component will be disabled */\n  @Input() disabled: boolean;\n\n  /** fired when total pages count changes, $event:number equals to total pages count */\n  @Output() numPages: EventEmitter<number> = new EventEmitter<number>();\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to\n   * object with current page index and number of items per page\n   */\n  @Output()\n  pageChanged: EventEmitter<PageChangedEvent> = new EventEmitter<PageChangedEvent>();\n\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  @Input()\n  get itemsPerPage(): number {\n    return this._itemsPerPage;\n  }\n\n  set itemsPerPage(v: number) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  /** total number of items in all pages */\n  @Input()\n  get totalItems(): number {\n    return this._totalItems;\n  }\n\n  set totalItems(v: number) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  get totalPages(): number {\n    return this._totalPages;\n  }\n\n  set totalPages(v: number) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n\n  set page(value: number) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  classMap: string;\n  pages: PagesModel[];\n\n  protected _itemsPerPage: number;\n  protected _totalItems: number;\n  protected _totalPages: number;\n  protected inited = false;\n  protected _page = 1;\n\n  constructor(private elementRef: ElementRef,\n              paginationConfig: PaginationConfig,\n              private changeDetection: ChangeDetectorRef) {\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(\n        Object.assign({}, paginationConfig.main, paginationConfig.pager)\n      );\n    }\n  }\n\n  configureOptions(config: ConfigModel): void {\n    this.config = Object.assign({}, config);\n  }\n\n  ngOnInit(): void {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    this.maxSize =\n      typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n    this.rotate =\n      typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n    this.boundaryLinks =\n      typeof this.boundaryLinks !== 'undefined'\n        ? this.boundaryLinks\n        : this.config.boundaryLinks;\n    this.directionLinks =\n      typeof this.directionLinks !== 'undefined'\n        ? this.directionLinks\n        : this.config.directionLinks;\n    this.pageBtnClass =\n      typeof this.pageBtnClass !== 'undefined'\n        ? this.pageBtnClass\n        : this.config.pageBtnClass;\n\n    // base class\n    this.itemsPerPage =\n      typeof this.itemsPerPage !== 'undefined'\n        ? this.itemsPerPage\n        : this.config.itemsPerPage;\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n\n  writeValue(value: number): void {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n\n  getText(key: string): string {\n    // tslint:disable-next-line:no-any\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\n  }\n\n  noPrevious(): boolean {\n    return this.page === 1;\n  }\n\n  noNext(): boolean {\n    return this.page === this.totalPages;\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  selectPage(page: number, event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (!this.disabled) {\n      if (event && event.target) {\n        // tslint:disable-next-line:no-any\n        const target: any = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n\n  // Create page object used in template\n  protected makePage(num: number,\n                     text: string,\n                     active: boolean): { number: number; text: string; active: boolean } {\n    return {text, number: num, active};\n  }\n\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\n    const pages: PagesModel[] = [];\n\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized =\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n\n    // recompute if maxSize\n    if (isMaxSized) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage =\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n\n    return pages;\n  }\n\n  // base class\n  protected calculateTotalPages(): number {\n    const totalPages =\n      this.itemsPerPage < 1\n        ? 1\n        : Math.ceil(this.totalItems / this.itemsPerPage);\n\n    return Math.max(totalPages || 0, 1);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  Provider, TemplateRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PaginationConfig } from './pagination.config';\nimport { ConfigModel, PagesModel, PaginationLinkContext, PaginationNumberLinkContext } from './models';\n\nexport interface PageChangedEvent {\n  itemsPerPage: number;\n  page: number;\n}\n\nexport const PAGINATION_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => PaginationComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'pagination',\n  templateUrl: './pagination.component.html',\n  providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\n})\nexport class PaginationComponent implements ControlValueAccessor, OnInit {\n  config: ConfigModel;\n  /** if `true` aligns each link to the sides of pager */\n  @Input() align: boolean;\n  /** limit number for page links in pager */\n  @Input() maxSize: number;\n  /** if false first and last buttons will be hidden */\n  @Input() boundaryLinks: boolean;\n  /** if false previous and next buttons will be hidden */\n  @Input() directionLinks: boolean;\n  // labels\n  /** first button text */\n  @Input() firstText: string;\n  /** previous button text */\n  @Input() previousText: string;\n  /** next button text */\n  @Input() nextText: string;\n  /** last button text */\n  @Input() lastText: string;\n  /** if true current page will in the middle of pages list */\n  @Input() rotate: boolean;\n  // css\n  /** add class to <code><li\\></code> */\n  @Input() pageBtnClass: string;\n  /** if true pagination component will be disabled */\n  @Input() disabled: boolean;\n  /** custom template for page link */\n  @Input() customPageTemplate: TemplateRef<PaginationNumberLinkContext>;\n  /** custom template for next link */\n  @Input() customNextTemplate: TemplateRef<PaginationLinkContext>;\n  /** custom template for previous link */\n  @Input() customPreviousTemplate: TemplateRef<PaginationLinkContext>;\n  /** custom template for first link */\n  @Input() customFirstTemplate: TemplateRef<PaginationLinkContext>;\n  /** custom template for last link */\n  @Input() customLastTemplate: TemplateRef<PaginationLinkContext>;\n\n  /** fired when total pages count changes, $event:number equals to total pages count */\n  @Output() numPages: EventEmitter<number> = new EventEmitter<number>();\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n   * with current page index and number of items per page\n   */\n  @Output()\n  pageChanged = new EventEmitter<PageChangedEvent>();\n\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  @Input()\n  get itemsPerPage(): number {\n    return this._itemsPerPage;\n  }\n\n  set itemsPerPage(v: number) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  /** total number of items in all pages */\n  @Input()\n  get totalItems(): number {\n    return this._totalItems;\n  }\n\n  set totalItems(v: number) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  get totalPages(): number {\n    return this._totalPages;\n  }\n\n  set totalPages(v: number) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n\n  set page(value: number) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  classMap: string;\n  pages: PagesModel[];\n\n  protected _itemsPerPage: number;\n  protected _totalItems: number;\n  protected _totalPages: number;\n  protected inited = false;\n  protected _page = 1;\n\n  constructor(\n    private elementRef: ElementRef,\n    paginationConfig: PaginationConfig,\n    private changeDetection: ChangeDetectorRef\n  ) {\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(paginationConfig.main);\n    }\n  }\n\n  configureOptions(config: ConfigModel): void {\n    this.config = Object.assign({}, config);\n  }\n\n  ngOnInit(): void {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    this.maxSize =\n      typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n    this.rotate =\n      typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n    this.boundaryLinks =\n      typeof this.boundaryLinks !== 'undefined'\n        ? this.boundaryLinks\n        : this.config.boundaryLinks;\n    this.directionLinks =\n      typeof this.directionLinks !== 'undefined'\n        ? this.directionLinks\n        : this.config.directionLinks;\n    this.pageBtnClass =\n      typeof this.pageBtnClass !== 'undefined'\n        ? this.pageBtnClass\n        : this.config.pageBtnClass;\n\n    // base class\n    this.itemsPerPage =\n      typeof this.itemsPerPage !== 'undefined'\n        ? this.itemsPerPage\n        : this.config.itemsPerPage;\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n\n  writeValue(value: number): void {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n\n  getText(key: string): string {\n    // tslint:disable-next-line:no-any\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\n  }\n\n  noPrevious(): boolean {\n    return this.page === 1;\n  }\n\n  noNext(): boolean {\n    return this.page === this.totalPages;\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  selectPage(page: number, event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (!this.disabled) {\n      if (event && event.target) {\n        // tslint:disable-next-line:no-any\n        const target: any = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n\n  // Create page object used in template\n  protected makePage(\n    num: number,\n    text: string,\n    active: boolean\n  ): { number: number; text: string; active: boolean } {\n    return { text, number: num, active };\n  }\n\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\n    const pages: PagesModel[] = [];\n\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized =\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n\n    // recompute if maxSize\n    if (isMaxSized) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage =\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n\n    return pages;\n  }\n\n  // base class\n  protected calculateTotalPages(): number {\n    const totalPages =\n      this.itemsPerPage < 1\n        ? 1\n        : Math.ceil(this.totalItems / this.itemsPerPage);\n\n    return Math.max(totalPages || 0, 1);\n  }\n// tslint:disable-next-line:max-file-line-count\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { PaginationConfig } from './pagination.config';\n\nimport { PagerComponent } from './pager.component';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PagerComponent, PaginationComponent],\n  exports: [PagerComponent, PaginationComponent]\n})\nexport class PaginationModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: PaginationModule, providers: [PaginationConfig] };\n  }\n}\n"]}