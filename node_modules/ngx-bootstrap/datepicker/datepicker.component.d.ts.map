{"version":3,"file":"datepicker.component.d.ts","sources":["datepicker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, Provider } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { DatePickerInnerComponent } from './datepicker-inner.component';\nimport { DatepickerConfig } from './datepicker.config';\nexport declare const DATEPICKER_CONTROL_VALUE_ACCESSOR: Provider;\nexport declare class DatePickerComponent implements ControlValueAccessor {\n    /** sets datepicker mode, supports: `day`, `month`, `year` */\n    datepickerMode: string;\n    /** default date to show if `ng-model` value is not specified */\n    initDate: Date;\n    /**  oldest selectable date */\n    minDate: Date;\n    /** latest selectable date */\n    maxDate: Date;\n    /** set lower datepicker mode, supports: `day`, `month`, `year` */\n    minMode: string;\n    /** sets upper datepicker mode, supports: `day`, `month`, `year` */\n    maxMode: string;\n    /** if false week numbers will be hidden */\n    showWeeks: boolean;\n    /** format of day in month */\n    formatDay: string;\n    /** format of month in year */\n    formatMonth: string;\n    /** format of year in year range */\n    formatYear: string;\n    /** format of day in week header */\n    formatDayHeader: string;\n    /** format of title when selecting day */\n    formatDayTitle: string;\n    /** format of title when selecting month */\n    formatMonthTitle: string;\n    /** starting day of the week from 0-6 (0=Sunday, ..., 6=Saturday) */\n    startingDay: number;\n    /** number of years displayed in year selection */\n    yearRange: number;\n    /** if true only dates from the currently displayed month will be shown */\n    onlyCurrentMonth: boolean;\n    /** if true shortcut`s event propagation will be disabled */\n    shortcutPropagation: boolean;\n    /** number of months displayed in a single row of month picker */\n    monthColLimit: number;\n    /** number of years displayed in a single row of year picker */\n    yearColLimit: number;\n    /** array of custom css classes to be applied to targeted dates */\n    customClass: {\n        date: Date;\n        mode: string;\n        clazz: string;\n    }[];\n    /** array of disabled dates */\n    dateDisabled: {\n        date: Date;\n        mode: string;\n    }[];\n    /** disabled days of the week from 0-6 (0=Sunday, ..., 6=Saturday) */\n    dayDisabled: number[];\n    /** currently active date */\n    activeDate: Date;\n    selectionDone: EventEmitter<Date>;\n    /** callback to invoke when the activeDate is changed. */\n    activeDateChange: EventEmitter<Date>;\n    _datePicker: DatePickerInnerComponent;\n    onChange: any;\n    onTouched: any;\n    config: DatepickerConfig;\n    protected _now: Date;\n    protected _activeDate: Date;\n    constructor(config: DatepickerConfig);\n    configureOptions(): void;\n    onUpdate(event: Date): void;\n    onSelectionDone(event: Date): void;\n    onActiveDateChange(event: Date): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: () => void): void;\n    registerOnTouched(fn: () => void): void;\n}\n"]}