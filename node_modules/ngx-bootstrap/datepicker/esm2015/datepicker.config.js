/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class DatepickerConfig {
    constructor() {
        this.locale = 'en';
        this.datepickerMode = 'day';
        this.startingDay = 0;
        this.yearRange = 20;
        this.minMode = 'day';
        this.maxMode = 'year';
        this.showWeeks = true;
        this.formatDay = 'DD';
        this.formatMonth = 'MMMM';
        this.formatYear = 'YYYY';
        this.formatDayHeader = 'dd';
        this.formatDayTitle = 'MMMM YYYY';
        this.formatMonthTitle = 'YYYY';
        this.onlyCurrentMonth = false;
        this.monthColLimit = 3;
        this.yearColLimit = 5;
        this.shortcutPropagation = false;
    }
}
DatepickerConfig.ɵfac = function DatepickerConfig_Factory(t) { return new (t || DatepickerConfig)(); };
DatepickerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DatepickerConfig, factory: DatepickerConfig.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatepickerConfig, [{
        type: Injectable
    }], function () { return []; }, null); })();
if (false) {
    /** @type {?} */
    DatepickerConfig.prototype.locale;
    /** @type {?} */
    DatepickerConfig.prototype.datepickerMode;
    /** @type {?} */
    DatepickerConfig.prototype.startingDay;
    /** @type {?} */
    DatepickerConfig.prototype.yearRange;
    /** @type {?} */
    DatepickerConfig.prototype.minMode;
    /** @type {?} */
    DatepickerConfig.prototype.maxMode;
    /** @type {?} */
    DatepickerConfig.prototype.showWeeks;
    /** @type {?} */
    DatepickerConfig.prototype.formatDay;
    /** @type {?} */
    DatepickerConfig.prototype.formatMonth;
    /** @type {?} */
    DatepickerConfig.prototype.formatYear;
    /** @type {?} */
    DatepickerConfig.prototype.formatDayHeader;
    /** @type {?} */
    DatepickerConfig.prototype.formatDayTitle;
    /** @type {?} */
    DatepickerConfig.prototype.formatMonthTitle;
    /** @type {?} */
    DatepickerConfig.prototype.onlyCurrentMonth;
    /** @type {?} */
    DatepickerConfig.prototype.monthColLimit;
    /** @type {?} */
    DatepickerConfig.prototype.yearColLimit;
    /** @type {?} */
    DatepickerConfig.prototype.shortcutPropagation;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci5jb25maWcuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtYm9vdHN0cmFwL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBRzNDLE1BQU0sT0FBTyxnQkFBZ0I7QUFDN0IsSUFGQTtBQUNFLFFBQ0EsV0FBTSxHQUFHLElBQUksQ0FBQztBQUNoQixRQUFFLG1CQUFjLEdBQUcsS0FBSyxDQUFDO0FBQ3pCLFFBQUUsZ0JBQVcsR0FBRyxDQUFDLENBQUM7QUFDbEIsUUFBRSxjQUFTLEdBQUcsRUFBRSxDQUFDO0FBQ2pCLFFBQUUsWUFBTyxHQUFHLEtBQUssQ0FBQztBQUNsQixRQUFFLFlBQU8sR0FBRyxNQUFNLENBQUM7QUFDbkIsUUFBRSxjQUFTLEdBQUcsSUFBSSxDQUFDO0FBQ25CLFFBQUUsY0FBUyxHQUFHLElBQUksQ0FBQztBQUNuQixRQUFFLGdCQUFXLEdBQUcsTUFBTSxDQUFDO0FBQ3ZCLFFBQUUsZUFBVSxHQUFHLE1BQU0sQ0FBQztBQUN0QixRQUFFLG9CQUFlLEdBQUcsSUFBSSxDQUFDO0FBQ3pCLFFBQUUsbUJBQWMsR0FBRyxXQUFXLENBQUM7QUFDL0IsUUFBRSxxQkFBZ0IsR0FBRyxNQUFNLENBQUM7QUFDNUIsUUFBRSxxQkFBZ0IsR0FBRyxLQUFLLENBQUM7QUFDM0IsUUFBRSxrQkFBYSxHQUFHLENBQUMsQ0FBQztBQUNwQixRQUFFLGlCQUFZLEdBQUcsQ0FBQyxDQUFDO0FBQ25CLFFBQUUsd0JBQW1CLEdBQUcsS0FBSyxDQUFDO0FBQzlCLElBQUEsQ0FBQztBQUNEOzRDQXBCQyxVQUFVOzs7O2dEQUNUO0FBQUM7QUFBYTtBQUNYLElBQUgsa0NBQWM7QUFDaEI7QUFBcUIsSUFBbkIsMENBQXVCO0FBQ3pCO0FBQ0UsSUFEQSx1Q0FBZ0I7QUFDbEI7QUFDRyxJQURELHFDQUFlO0FBQ2pCO0FBQ0UsSUFEQSxtQ0FBZ0I7QUFDbEI7QUFDQyxJQURDLG1DQUFpQjtBQUNuQjtBQUNDLElBREMscUNBQWlCO0FBQ25CO0FBQ0MsSUFEQyxxQ0FBaUI7QUFDbkI7QUFBcUIsSUFBbkIsdUNBQXFCO0FBQ3ZCO0FBQXFCLElBQW5CLHNDQUFvQjtBQUN0QjtBQUFxQixJQUFuQiwyQ0FBdUI7QUFDekI7QUFBcUIsSUFBbkIsMENBQTZCO0FBQy9CO0FBQXFCLElBQW5CLDRDQUEwQjtBQUM1QjtBQUFxQixJQUFuQiw0Q0FBeUI7QUFDM0I7QUFDQSxJQURFLHlDQUFrQjtBQUNwQjtBQUNDLElBREMsd0NBQWlCO0FBQ25CO0FBQXFCLElBQW5CLCtDQUE0QjtBQUM5QjtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRGF0ZXBpY2tlckNvbmZpZyB7XG4gIGxvY2FsZSA9ICdlbic7XG4gIGRhdGVwaWNrZXJNb2RlID0gJ2RheSc7XG4gIHN0YXJ0aW5nRGF5ID0gMDtcbiAgeWVhclJhbmdlID0gMjA7XG4gIG1pbk1vZGUgPSAnZGF5JztcbiAgbWF4TW9kZSA9ICd5ZWFyJztcbiAgc2hvd1dlZWtzID0gdHJ1ZTtcbiAgZm9ybWF0RGF5ID0gJ0REJztcbiAgZm9ybWF0TW9udGggPSAnTU1NTSc7XG4gIGZvcm1hdFllYXIgPSAnWVlZWSc7XG4gIGZvcm1hdERheUhlYWRlciA9ICdkZCc7XG4gIGZvcm1hdERheVRpdGxlID0gJ01NTU0gWVlZWSc7XG4gIGZvcm1hdE1vbnRoVGl0bGUgPSAnWVlZWSc7XG4gIG9ubHlDdXJyZW50TW9udGggPSBmYWxzZTtcbiAgbW9udGhDb2xMaW1pdCA9IDM7XG4gIHllYXJDb2xMaW1pdCA9IDU7XG4gIHNob3J0Y3V0UHJvcGFnYXRpb24gPSBmYWxzZTtcbn1cbiJdfQ==