{"version":3,"file":"button-radio.directive.d.ts","sources":["button-radio.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, OnInit, Provider, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\nexport declare const RADIO_CONTROL_VALUE_ACCESSOR: Provider;\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\nexport declare class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n    private el;\n    private cdr;\n    private group;\n    private renderer;\n    onChange: Function;\n    onTouched: Function;\n    /** Radio button value, will be set to `ngModel` */\n    btnRadio: string;\n    /** If `true` — radio button can be unchecked */\n    uncheckable: boolean;\n    /** Current value of radio component or group */\n    value: null | string;\n    /** If `true` — radio button is disabled */\n    disabled: boolean;\n    readonly isActive: boolean;\n    private _value;\n    private _disabled;\n    constructor(el: ElementRef, cdr: ChangeDetectorRef, group: ButtonRadioGroupDirective, renderer: Renderer2);\n    onClick(): void;\n    ngOnInit(): void;\n    onBlur(): void;\n    _onChange(value: string): void;\n    writeValue(value: string): void;\n    registerOnChange(fn: () => {}): void;\n    registerOnTouched(fn: () => {}): void;\n    setDisabledState(disabled: boolean): void;\n}\n"]}