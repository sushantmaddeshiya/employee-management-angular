{"version":3,"file":"ngx-bootstrap-buttons.js","sources":["ng:/ngx-bootstrap/buttons/button-checkbox.directive.ts","ng:/ngx-bootstrap/buttons/button-radio.directive.ts","ng:/ngx-bootstrap/buttons/button-radio-group.directive.ts","ng:/ngx-bootstrap/buttons/buttons.module.ts"],"names":["RADIO_CONTROL_VALUE_ACCESSOR"],"mappings":"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","sourcesContent":["// tslint:disable:no-use-before-declare\nimport {\n  Directive,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Provider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n * Add checkbox functionality to any element\n */\n@Directive({\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n  @Input() btnCheckboxTrue = true;\n  /** Falsy value, will be set to ngModel */\n  @Input() btnCheckboxFalse = false;\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-pressed')\n  state = false;\n\n  protected value: boolean | string;\n  protected isDisabled: boolean;\n\n  protected onChange = Function.prototype;\n  protected onTouched = Function.prototype;\n\n  // view -> model\n  @HostListener('click')\n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): void {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: boolean | string | null): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Provider,\n  Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  /** Radio button value, will be set to `ngModel` */\n  @Input() btnRadio: string;\n  /** If `true` â radio button can be unchecked */\n  @Input() uncheckable: boolean;\n  /** Current value of radio component or group */\n  @Input() get value() {\n    return this.group ? this.group.value : this._value;\n  }\n\n  set value(value: null | string) {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this._value = value;\n  }\n  /** If `true` â radio button is disabled */\n  @Input() get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this._disabled = disabled;\n    this.setDisabledState(disabled);\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-pressed')\n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  private _value:  null | string;\n  private _disabled: boolean;\n\n  constructor(\n    private el: ElementRef,\n    private cdr: ChangeDetectorRef,\n    @Optional() private group: ButtonRadioGroupDirective,\n    private renderer: Renderer2\n  ) {}\n\n  @HostListener('click')\n  onClick(): void {\n    if (this.el.nativeElement.attributes.disabled || !this.uncheckable && this.btnRadio === this.value) {\n      return;\n    }\n\n    this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;\n    this._onChange(this.value);\n  }\n\n  ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  _onChange(value: string): void {\n    if (this.group) {\n      this.group.onTouched();\n      this.group.onChange(value);\n\n      return;\n    }\n    this.onTouched();\n    this.onChange(value);\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: string): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (disabled) {\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  Provider,\n  QueryList\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ButtonRadioDirective } from './button-radio.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonRadioGroupDirective),\n  multi: true\n};\n\n/**\n * A group of radio buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadioGroup]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioGroupDirective implements ControlValueAccessor {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  @ContentChildren(forwardRef(() => ButtonRadioDirective)) radioButtons: QueryList<ButtonRadioDirective>;\n\n  get value() {\n    return this._value;\n  }\n  set value(value: string | null) {\n    this._value = value;\n  }\n\n  private _value: string | null;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  writeValue(value: string | null): void {\n    this._value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (this.radioButtons) {\n      this.radioButtons.forEach(buttons => {\n        buttons.setDisabledState(disabled);\n      });\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\n@NgModule({\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective]\n})\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\n}\n"]}