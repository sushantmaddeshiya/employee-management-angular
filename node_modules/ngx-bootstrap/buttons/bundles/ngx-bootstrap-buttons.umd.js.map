{"version":3,"file":"ngx-bootstrap-buttons.umd.js","sources":["ng:/ngx-bootstrap/buttons/button-checkbox.directive.ts","ng:/ngx-bootstrap/buttons/button-radio.directive.ts","ng:/ngx-bootstrap/buttons/button-radio-group.directive.ts","ng:/ngx-bootstrap/buttons/buttons.module.ts"],"names":["NG_VALUE_ACCESSOR","forwardRef","Directive","Input","HostBinding","HostListener","ElementRef","ChangeDetectorRef","Optional","Renderer2","RADIO_CONTROL_VALUE_ACCESSOR","ContentChildren","NgModule"],"mappings":"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","sourcesContent":["// tslint:disable:no-use-before-declare\nimport {\n  Directive,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Provider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n * Add checkbox functionality to any element\n */\n@Directive({\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n  @Input() btnCheckboxTrue = true;\n  /** Falsy value, will be set to ngModel */\n  @Input() btnCheckboxFalse = false;\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-pressed')\n  state = false;\n\n  protected value: boolean | string;\n  protected isDisabled: boolean;\n\n  protected onChange = Function.prototype;\n  protected onTouched = Function.prototype;\n\n  // view -> model\n  @HostListener('click')\n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): void {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: boolean | string | null): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Provider,\n  Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  /** Radio button value, will be set to `ngModel` */\n  @Input() btnRadio: string;\n  /** If `true` â radio button can be unchecked */\n  @Input() uncheckable: boolean;\n  /** Current value of radio component or group */\n  @Input() get value() {\n    return this.group ? this.group.value : this._value;\n  }\n\n  set value(value: null | string) {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this._value = value;\n  }\n  /** If `true` â radio button is disabled */\n  @Input() get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this._disabled = disabled;\n    this.setDisabledState(disabled);\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-pressed')\n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  private _value:  null | string;\n  private _disabled: boolean;\n\n  constructor(\n    private el: ElementRef,\n    private cdr: ChangeDetectorRef,\n    @Optional() private group: ButtonRadioGroupDirective,\n    private renderer: Renderer2\n  ) {}\n\n  @HostListener('click')\n  onClick(): void {\n    if (this.el.nativeElement.attributes.disabled || !this.uncheckable && this.btnRadio === this.value) {\n      return;\n    }\n\n    this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;\n    this._onChange(this.value);\n  }\n\n  ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  _onChange(value: string): void {\n    if (this.group) {\n      this.group.onTouched();\n      this.group.onChange(value);\n\n      return;\n    }\n    this.onTouched();\n    this.onChange(value);\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: string): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (disabled) {\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  Provider,\n  QueryList\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ButtonRadioDirective } from './button-radio.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonRadioGroupDirective),\n  multi: true\n};\n\n/**\n * A group of radio buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadioGroup]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioGroupDirective implements ControlValueAccessor {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  @ContentChildren(forwardRef(() => ButtonRadioDirective)) radioButtons: QueryList<ButtonRadioDirective>;\n\n  get value() {\n    return this._value;\n  }\n  set value(value: string | null) {\n    this._value = value;\n  }\n\n  private _value: string | null;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  writeValue(value: string | null): void {\n    this._value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (this.radioButtons) {\n      this.radioButtons.forEach(buttons => {\n        buttons.setDisabledState(disabled);\n      });\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\n@NgModule({\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective]\n})\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\n}\n"]}